<!doctype html>
<html>

	<head>
		<meta charset="UTF-8">
		<title></title>
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<link href="../css/mui.min.css" rel="stylesheet" />
		<link rel="stylesheet" href="../css/public.css" />
		<link rel="stylesheet" href="../css/observation.css" />
	</head>
	
	<body>
		<script src="../js/mui.min.js"></script>
		<div class="obervationBox">
			<!--患者选择-->
			   <div class="selectArea"id='selectArea'>
				<h2>请选择或者输入<span id='itemName'></span></h2>
				<div class="liCon"id='liCon'>
					
				</div>
				<h2 class="nextOper">
					<button id='clear'>清除</button>
					<button id='nextItem'>下一项</button>
				</h2>
			</div>
			<div class="nextPre"id='nextPre'>
				<button id="inputClear">清除</button>
				<button id="inputNext">下一项</button>
			</div>
				
			<!--头部-->
	    	<div class="dataTime">
	    		<span id="currentDate"></span>
	    		<span class="time">
	    			<span><i class="one"></i></span>
	    			<span class="now"><input type="button"value="12:45" onclick="pickTime()"  /><i class="two"></i></span>
	    			<span><i class="three"></i></span>
	    		</span>
	    	</div>
	    	<div class="listcontainer">
	    		<div id="list">
	    			<div class="temperature">		
		    		<ul>
		    			<li>
		    				<label for="Temperature">
		    					<span>体温</span>
		    				</label>
		    				<input type="number" class="testName" name='Temperature'id='Temperature'placeholder="请输入"/>
		    				<span class="unit">℃</span>
		    				<i class="tip">请输入1-45之间的数值</i>
		    				
		    			</li>
		    			<li><label for="Incubator"><span>箱温</span></label><input type="number" class="testName" name='Incubator'id='Incubator'placeholder="请输入"/><span class="unit">℃</span><i class="tip">请输入1-100之间的数值</i></li>
		    			<li class="lastLi"><label for="Humidity"><span>湿度</span></label><input type="number" class="testName" name='Humidity'id='Humidity'placeholder="请输入"/><span class="unit">℃</span><i class="tip">请输入1-100之间的数值</i></li>
		    		</ul>
	    			</div>
	    			<div class="blood">
		    		<ul>
		    			<li class="selectItem">
		    				<span class="selectLeft">血氧位置</span>
		    				<span class="selectRight"name='BloodOxygen'>请选择</span>
		    			</li>
		    			<li class="selectItem">
		    				<span>面色/肢端</span>
		  					<span class="selectRight"name='Face'>请选择</span>
		    			</li>
		    			<li class="selectItem">
		    				<span>皮肤</span>
		    				<span class="selectRight"name='Skin'>请选择</span>
		    			</li>
		    			<li class="selectItem">
		    				<span>肌张力</span>
		    				<span class="selectRight"name='MuscularTension'>请选择</span>
		    			</li>
		    			<li class="selectItem">
		    				<span>腹部</span>
		    				<span class="selectRight"name='Abdomen'>请选择</span>
		    			</li>
		    			<li class="selectItem">
		    				<span>体位</span>
		    				<span class="selectRight"name='BodyPosition'>请选择</span>
		    			</li>
		    			<li class="selectItem">
		    				<span>氧疗方式</span>		    				
		    				<span class="selectRight"name='OxygenTherapy'>请选择</span>
		    			</li>
		    			<li>
		    				<label for="FiO2"><span>FiO2</span></label>
		    				<input type="number" name='FiO2'id='FiO2'placeholder="请输入"/>
		    			</li>
		    			<li class="selectItem lastLi">
		    				<span>口鼻腔分泌物</span>
		    				<span class="selectRight"name='Oronasal'>请选择</span>
		    			</li>
		    		</ul>
	    		</div>
	    		<h3>机械通气</h3>
	    			<div class="Model">
			    		<ul>
			    			<li class="selectItem">
			    				<span>模式</span>
			    				<span class="selectRight"name='Model'>请选择</span>
			    			</li>
			    			<li><label for="FQCY"><span>频率</span></label><input type="number"name='FQCY'id='FQCY' placeholder="请输入"class="mui-input-clear"/></li>
			    			<li>
			    				<label for="PIP/PEEP"><span>PIP/PEEP</span></label>
		    					<input type="number" name='PIP/PEEP'id='PIP/PEEP'placeholder="请输入"/>
			    			</li>
			    			<li class="selectItem lastLi">
			    				<span>气管内分泌物</span>
			    				<span class="selectRight"name='AirPipe'>请选择</span>
			    			</li>
			    		</ul>
	    			</div>
	    			<div class="weight last">
	    				<ul>
	    					<li class="lastLi"><label for="Weight"><span>体重</span></label><input type="number"name='Weight'id='Weight'placeholder="请输入" class="testName"/><span class="unit">kg</span></li>
	    				</ul>
	    			</div>
	    		</div>
	    		<div class="saveBack">
	    			<button class="clearButton"id='clearButton'>清空</button>
	    			<button class="save"id='saveBtn'>保存并上传</button>
	    		</div>
	    		
	    	</div>	    		
		</div>
		<script src="../lib/template/template.js"></script>
		<script type='text/template'id='selectPatient'>
			{{each list as value i}}
			<div class="singleBox"MRN='{{value.MRN}}'PatientName='{{value.PatientName}}'PatientNumber='{{value.PatientNumber}}'id='hisData'>
			  <a class="single"><span>{{value.Bed}}</span>&nbsp;<span>{{value.PatientName}}</span></a>
			</div>
			{{/each}}
		</script>
		<script type='text/template'id='selectItemTpl'>
			<input type="text"class="selectInput"id='selectInput'placeholder="请输入或选择以下选项" />
					<ul id='itemCon'class="itemCon">
					{{each list as value i}}
		    			<li><span class="hook">√</span><span class="itemConName">{{value}}</span></li>
		    		{{/each}}
					</ul>
			
		</script>
		<script type="text/javascript"src="../js/config.js"></script>
		<script src="../js/tool.js"></script>
		<script src="../js/public.js"></script>
		<!--时间控件-->
		<script>
			var timeArr=[];
//			获取列表的容器
			var listContainer=document.getElementsByClassName('listcontainer')[0];
			
			function plusReady(){
			//			处理床位列表传值
			var detailMain=plus.webview.getWebviewById('detail_main.html');
			var w=plus.webview.getWebviewById('observation.html');
			var patientBed=w.PatientBed;
			var patientName=w.PatientName;
			var patientNumber=w.PatientNumber;
			var MRN=w.MRN;
			//			获取时间dom
			var three=document.getElementsByClassName('three')[0];
			var one=document.getElementsByClassName('one')[0];
			var two=document.getElementsByClassName('two')[0];
			//			获取基本操作dom
			
			var inputs=listContainer.getElementsByTagName('input');	
			var selectRights=document.getElementsByClassName('selectRight');
			var selectDom=document.getElementsByClassName('selectItem');
			var clearBtn=document.getElementById('clearButton');
			function clearData(){
				for(var i=0;i<inputs.length;i++){
						if(inputs[i].value!=0){
							clearBtn.classList.add('clearAble');
						}
			
				inputs[i].addEventListener('input',function(){
					for(var j=0;j<inputs.length;j++){
						if(inputs[j].value!=0){
							clearBtn.classList.add('clearAble');
						}
					}
				})
			}
			for(var n=0;n<selectRights.length;n++){
				selectDom[n].addEventListener('tap',function(){
					for(var s=0;s<selectRights.length;s++){
					if(selectRights[s].innerHTML!='请选择'){
						clearBtn.classList.add('clearAble');
					}
				}
				})
				for(var s=0;s<selectRights.length;s++){
					if(selectRights[s].innerHTML!='请选择'){
						clearBtn.classList.add('clearAble');
					}
				}
			}
			}
			clearData();
			listContainer.classList.remove('hasSave');
			listContainer.classList.remove('OtherData');
			listContainer.classList.remove('hasChange');
			var selectRights=document.getElementsByClassName('selectRight');
			//			验证表单
			var Temperature=document.getElementById('Temperature');
			var Incubator=document.getElementById('Incubator');
			var Humidity=document.getElementById('Humidity');
			var tips=document.getElementsByClassName('tip');
			Temperature.addEventListener('blur',function(){
				if(parseInt(Temperature.value)>45||parseInt(Temperature.value)<0){
					tips[0].style.display='block';
					tips[0].setAttribute('error','1');
				}
			})
			Incubator.addEventListener('blur',function(){
				if(parseInt(Incubator.value)>100||parseInt(Incubator.value)<0){
					tips[1].style.display='block';
					tips[1].setAttribute('error','1');
				}
			})
			Humidity.addEventListener('blur',function(){
				if(parseInt(Humidity.value)>100||parseInt(Humidity.value)<0){
					tips[2].style.display='block';
					tips[2].setAttribute('error','1');
				}
			})
			for(var i=0;i<tips.length;i++){
				tips[i].addEventListener('tap',function(){
					this.style.display='none';
					this.setAttribute('error','0');
					this.previousElementSibling.previousElementSibling.value='';
				})
			}
//			获取时间列表
			mui.ajax({
				url:url,
				type:'post',
				data:{
					msgBody:JSON.stringify({
                   		PatientMRN:MRN,
                    	CurrentTime:new Date().Format("yyyy-MM-dd hh:mm:ss")
                	}),                   
                	msgHeader:JSON.stringify({
                    	ServerName:'GetTimeList',
                    	Format: 'json',
                    	CallOperator: '',
                    	Certificate:'123456'})
				},
				dataType:'json',
				success:function(data){
					for(var i=0;i<data.Contents.length;i++){
						timeArr.push(data.Contents[i].Time);
					}
					var hour=new Date().getHours();
					
					//设置时间的默认值为当前时间
					for(var i=0;i<timeArr.length;i++){
						var colonIndex=timeArr[i].indexOf(':');
						var nextIndex=i+1>=timeArr.length-1?timeArr.length-1:i+1;
						if(timeArr[i].substring(0,colonIndex)<=hour && timeArr[nextIndex].substring(0,colonIndex)>hour){					
							two.innerHTML=timeArr[i];
							two.setAttribute('index',i);
							if(i<=0){
								three.innerHTML=timeArr[i+1];
								three.setAttribute('index',i+1);						
								one.innerHTML=timeArr[timeArr.length-1];
								one.setAttribute('index',timeArr.length-1);
								continue;
							}
							if(i>=timeArr.length-1){
								one.innerHTML=timeArr[i-1];
								one.setAttribute('index',i-1);
								three.innerHTML=timeArr[0];
								three.setAttribute('index',0);
								continue;
							}
							one.innerHTML=timeArr[i-1];
							one.setAttribute('index',i-1);
							three.innerHTML=timeArr[i+1];
							three.setAttribute('index',i+1);
						}
					}		
//					查找当前时间的记录
					mui.ajax({
							url:url,
							type:'post',
							data:{
								msgBody:JSON.stringify({
		                   			PatientMRN:MRN,
		                    		OperateTime:currentDate.innerHTML+" "+two.innerHTML+":00",
		                    		ColumnID:parseInt(two.getAttribute('index'))+3+''
                				}),                   
                				msgHeader:JSON.stringify({
                    				ServerName:'GetObservationItemLast',
                    				Format: 'json',
                    				CallOperator: '',
                    				Certificate:'123456'})
								},
							dataType:'json',
							beforeSend:function(){
								plus.nativeUI.showWaiting('正在加载数据…');
							},
							success:function(data){
								setTimeout(function(){
									plus.nativeUI.closeWaiting();
									if(data.Code==0){
										if(parseInt(two.innerHTML.substr(0,2))!=parseInt(data.Contents.OperateTime.substring(data.Contents.OperateTime.indexOf(" "),data.Contents.OperateTime.indexOf(":")))){
											listContainer.classList.remove('hasSave');										
											for(var i=0;i<inputs.length;i++){
												inputs[i].value='';
											}
											for(var j=0;j<selectRights.length;j++){
												selectRights[j].innerHTML='请选择';
											} 
											return;
										}
										for(var key in data.Contents){
											if(key=='OperateTime'){
												continue;
											}
											listContainer.classList.add('hasSave');
											document.getElementsByName(key)[0].value=data.Contents[key];			
											document.getElementsByName(key)[0].innerHTML=data.Contents[key]?data.Contents[key]:'请选择';								
										}
									}else {
										plus.nativeUI.closeWaiting();
										listContainer.classList.remove('hasSave');
										for(var i=0;i<inputs.length;i++){
											inputs[i].value='';
										}
										for(var j=0;j<selectRights.length;j++){
											selectRights[j].value='请选择';
										} 
									}
									clearData();

								},200);
								
						},
						error:function(){
					mui.toast('服务器异常，请稍后再试');
				}
					})
					var timeBoxs=document.getElementsByClassName('time')[0].children;
					//设置位置
					for(var i=0;i<timeBoxs.length;i++){
						timeBoxs[i].style.left=170*i/100+'rem';
					}
//					修改时间
					two.addEventListener('tap',function(){
						this.style.display='none';
						this.previousElementSibling.value=this.innerHTML;
						
					})
//					查询最近的记录
					one.addEventListener('tap',function(){
						if(!this.innerHTML){
							return;
						}
						var this_=this;
						if(listContainer.classList.contains('hasChange')){
							mui.confirm('当前时间存在未保存的数据，是否保存？',function(e){
							if(e.index==1){
								saveObservation();
								return;
							}else {
								listContainer.classList.remove('hasChange');
								mui.fire(detailMain,'getParams',{
								hasChange:listContainer.classList.contains('hasChange')
								})
								var thisInnerHtml=this_.innerHTML;
								var tapIndex=parseInt(one.getAttribute('index'));
								if(tapIndex==9){
									currentDate.innerHTML=getPreDay(currentDate.innerHTML);
								}
									two.innerHTML=timeArr[tapIndex];
									two.setAttribute('index',tapIndex);
									three.innerHTML=timeArr[tapIndex+1];
									three.setAttribute('index',parseInt(tapIndex+1));
									if(tapIndex<=0){
										one.innerHTML='';
										one.setAttribute('index',0);
									}else {
										one.innerHTML=timeArr[tapIndex-1];
										one.setAttribute('index',tapIndex-1);
									}									
								listContainer.classList.remove('OtherData');
								mui.ajax({
									url:url,
									type:'post',
									data:{
										msgBody:JSON.stringify({
				                   			PatientMRN:MRN,
				                    		OperateTime:currentDate.innerHTML+" "+thisInnerHtml+":00",
				                    		ColumnID:parseInt(this_.getAttribute('index'))+3+''
		                				}),                   
		                				msgHeader:JSON.stringify({
		                    				ServerName:'GetObservationItemLast',
		                    				Format: 'json',
		                    				CallOperator: '',
		                    				Certificate:'123456'})
										},
										beforeSend:function(){
											plus.nativeUI.showWaiting('加载中…');
									},
									dataType:'json',
									success:function(data){
										if(data.Code==0){
											plus.nativeUI.closeWaiting();
											
											if(parseInt(thisInnerHtml.substr(0,2))!=parseInt(data.Contents.OperateTime.substring(data.Contents.OperateTime.indexOf(" "),data.Contents.OperateTime.indexOf(":")))){
												listContainer.classList.add('OtherData');
											}
											for(var key in data.Contents){
												if(key=='OperateTime'){
													continue;
												}
												listContainer.classList.add('hasSave');
												document.getElementsByName(key)[0].value=data.Contents[key];
												document.getElementsByName(key)[0].innerHTML=data.Contents[key]?data.Contents[key]:'请选择';
											}
										}else {
											plus.nativeUI.closeWaiting();
												listContainer.classList.remove('hasSave');
												for(var i=0;i<inputs.length;i++){
													inputs[i].value='';
												}
												for(var j=0;j<selectRights.length;j++){
													selectRights[j].innerHTML='请选择';
												} 
										}
										clearData();
									},
									error:function(){
							mui.toast('服务器异常，请稍后再试');
						}
								})

							}
						})
							return;
						}
						var thisInnerHtml=this.innerHTML;
						var tapIndex=parseInt(one.getAttribute('index'));
						if(tapIndex==9){
							currentDate.innerHTML=getPreDay(currentDate.innerHTML);
						}
							two.innerHTML=timeArr[tapIndex];
							two.setAttribute('index',tapIndex);
							three.innerHTML=timeArr[tapIndex+1];
							three.setAttribute('index',parseInt(tapIndex+1));
							if(tapIndex<=0){
								one.innerHTML='';
								one.setAttribute('index',0);
							}else {
								one.innerHTML=timeArr[tapIndex-1];
								one.setAttribute('index',tapIndex-1);
							}									
						listContainer.classList.remove('OtherData');
						mui.ajax({
							url:url,
							type:'post',
							data:{
								msgBody:JSON.stringify({
		                   			PatientMRN:MRN,
		                    		OperateTime:currentDate.innerHTML+" "+thisInnerHtml+":00",
		                    		ColumnID:parseInt(this.getAttribute('index'))+3+''
                				}),                   
                				msgHeader:JSON.stringify({
                    				ServerName:'GetObservationItemLast',
                    				Format: 'json',
                    				CallOperator: '',
                    				Certificate:'123456'})
								},
								beforeSend:function(){
									plus.nativeUI.showWaiting('加载中…');
							},
							dataType:'json',
							success:function(data){
								if(data.Code==0){
									plus.nativeUI.closeWaiting();
									console.log(parseInt(thisInnerHtml.substr(0,2)));
									console.log(parseInt(data.Contents.OperateTime.substring(data.Contents.OperateTime.indexOf(" "),data.Contents.OperateTime.indexOf(":"))));
									if(parseInt(thisInnerHtml.substr(0,2))!=parseInt(data.Contents.OperateTime.substring(data.Contents.OperateTime.indexOf(" "),data.Contents.OperateTime.indexOf(":")))){
										listContainer.classList.add('OtherData');
									}
									for(var key in data.Contents){
										if(key=='OperateTime'){
											continue;
										}
										listContainer.classList.add('hasSave');
										document.getElementsByName(key)[0].value=data.Contents[key];
										document.getElementsByName(key)[0].innerHTML=data.Contents[key]?data.Contents[key]:'请选择';
									}
								}else {
									plus.nativeUI.closeWaiting();
										listContainer.classList.remove('hasSave');
										for(var i=0;i<inputs.length;i++){
											inputs[i].value='';
										}
										for(var j=0;j<selectRights.length;j++){
											selectRights[j].innerHTML='请选择';
										} 
								}
								clearData();
							},
							error:function(){
					mui.toast('服务器异常，请稍后再试');
				}
						})
					
					})
//					切换到最新的时间
					three.addEventListener('tap',function(){						
						if(!this.innerHTML){
							return;
						}
						var _that=this;
						if(listContainer.classList.contains('hasChange')){
							mui.confirm('当前时间存在未保存的数据，是否保存？',function(e){
							if(e.index==1){
								saveObservation();
								return;
							}else {
								listContainer.classList.remove('hasChange');
								mui.fire(detailMain,'getParams',{
								hasChange:listContainer.classList.contains('hasChange')
								})
								var thisInnerHtml=_that.innerHTML;
								var tapIndex=parseInt(three.getAttribute('index'));
								if(tapIndex==10){
									currentDate.innerHTML=getNextDay();
								}
										two.innerHTML=timeArr[tapIndex];
										two.setAttribute('index',tapIndex);
										one.innerHTML=timeArr[tapIndex-1];
										one.setAttribute('index',tapIndex-1);
										if(tapIndex>=timeArr.length-1){									
											three.innerHTML="";
											three.setAttribute('index',timeArr.length-1);
										}else {
											three.innerHTML=timeArr[tapIndex+1];
											three.setAttribute('index',parseInt(tapIndex+1));
										}	
								listContainer.classList.remove('OtherData');
								mui.ajax({
							url:url,
							type:'post',
							data:{
								msgBody:JSON.stringify({
		                   			PatientMRN:MRN,
		                    		OperateTime:currentDate.innerHTML+" "+thisInnerHtml+":00",
		                    		ColumnID:parseInt(_that.getAttribute('index'))+3+''
                				}),                   
                				msgHeader:JSON.stringify({
                    				ServerName:'GetObservationItemLast',
                    				Format: 'json',
                    				CallOperator: '',
                    				Certificate:'123456'})
								},
								beforeSend:function(){
									plus.nativeUI.showWaiting('加载中…');
							},
							dataType:'json',
							success:function(data){
								if(data.Code==0){
									plus.nativeUI.closeWaiting();
									if(parseInt(thisInnerHtml.substr(0,2))!=parseInt(data.Contents.OperateTime.substring(data.Contents.OperateTime.indexOf(" "),data.Contents.OperateTime.indexOf(":")))){
										listContainer.classList.add('OtherData');
									}
									for(var key in data.Contents){
										if(key=='OperateTime'){
											continue;
										}
										listContainer.classList.add('hasSave');
										document.getElementsByName(key)[0].value=data.Contents[key];
										document.getElementsByName(key)[0].innerHTML=data.Contents[key]?data.Contents[key]:'请选择';
									}
								}else {
									plus.nativeUI.closeWaiting();
										listContainer.classList.remove('hasSave');
									}
								clearData();
								},
								error:function(){
					mui.toast('服务器异常，请稍后再试');
				}
							});
				
							}
						})
							return;
						}

						var thisInnerHtml=this.innerHTML;
						var tapIndex=parseInt(three.getAttribute('index'));
						if(tapIndex==10){
							currentDate.innerHTML=getNextDay();
						}
								two.innerHTML=timeArr[tapIndex];
								two.setAttribute('index',tapIndex);
								one.innerHTML=timeArr[tapIndex-1];
								one.setAttribute('index',tapIndex-1);
								if(tapIndex>=timeArr.length-1){									
									three.innerHTML="";
									three.setAttribute('index',timeArr.length-1);
								}else {
									three.innerHTML=timeArr[tapIndex+1];
									three.setAttribute('index',parseInt(tapIndex+1));
								}	
						listContainer.classList.remove('OtherData');
						mui.ajax({
							url:url,
							type:'post',
							data:{
								msgBody:JSON.stringify({
		                   			PatientMRN:MRN,
		                    		OperateTime:currentDate.innerHTML+" "+thisInnerHtml+":00",
		                    		ColumnID:parseInt(this.getAttribute('index'))+3+''
                				}),                   
                				msgHeader:JSON.stringify({
                    				ServerName:'GetObservationItemLast',
                    				Format: 'json',
                    				CallOperator: '',
                    				Certificate:'123456'})
								},
								beforeSend:function(){
									plus.nativeUI.showWaiting('加载中…');
							},
							dataType:'json',
							success:function(data){
								if(data.Code==0){
									plus.nativeUI.closeWaiting();
									if(parseInt(thisInnerHtml.substr(0,2))!=parseInt(data.Contents.OperateTime.substring(data.Contents.OperateTime.indexOf(" "),data.Contents.OperateTime.indexOf(":")))){
										listContainer.classList.add('OtherData');
									}
									for(var key in data.Contents){
										if(key=='OperateTime'){
											continue;
										}
										listContainer.classList.add('hasSave');
										document.getElementsByName(key)[0].value=data.Contents[key];
										document.getElementsByName(key)[0].innerHTML=data.Contents[key]?data.Contents[key]:'请选择';
									}
								}else {
									plus.nativeUI.closeWaiting();
										listContainer.classList.remove('hasSave');
									}
								clearData();
								},
								error:function(){
					mui.toast('服务器异常，请稍后再试');
				}
							});
							});
										
//					保存并上传数据
					document.getElementById('saveBtn').addEventListener('tap',saveObservation);
					var detailMain=plus.webview.getWebviewById('detail_main.html');
					function saveObservation(){
						if(!listContainer.classList.contains('hasChange') && !listContainer.classList.contains('OtherData')){
							mui.toast('当前数据已保存或者未填入数据');
							return;
						}
					for(var i=0;i<tips.length;i++){
						if(tips[i].getAttribute('error')=='1'){
							mui.toast('请输入正确的数据');
							return;
						}
						
					}
					var saveObj={
						PatientMRN:MRN,
						PatientNumber: patientNumber,
						PatientName:patientName,
						ColumnId:parseInt(two.getAttribute('index'))+3+'',
						OperateTime: currentDate.innerHTML+" "+two.innerHTML+":00"
						};
						for(var i=0;i<inputs.length;i++){
							var nameInputAttr=inputs[i].getAttribute('name');
							saveObj[nameInputAttr]=inputs[i].value;
						}
						for(var i=0;i<selectRights.length;i++){
							saveObj[selectRights[i].getAttribute('name')]=selectRights[i].innerHTML=='请选择'?'':selectRights[i].innerHTML;
						}
						mui.ajax({
							url:url,
							type:'post',
							data:{
								msgBody:JSON.stringify(saveObj),                   
		                		msgHeader:JSON.stringify({
		                    	ServerName:'SaveObservationItem',
		                    	Format: 'json',
		                    	CallOperator: '',
		                    	Certificate:'123456'})
							},
							beforeSend:function(){
								plus.nativeUI.showWaiting('正在保存中…');
							},
							dataType:'json',
							success:function(data){
								if(data.Code==0){
									setTimeout(function(){
										mui.toast('数据保存成功');
										plus.nativeUI.closeWaiting();
										listContainer.classList.add('hasSave');
										listContainer.classList.remove('OtherData');
										listContainer.classList.remove('hasChange');
										mui.fire(detailMain,'getParams',{
											hasChange:listContainer.classList.contains('hasChange')
										})
									},1000);
									
								}else{
									mui.toast('服务器异常');
									plus.nativeUI.closeWaiting();
								}
							},
							error:function(){
								plus.nativeUI.closeWaiting();
								mui.toast('服务器异常，请稍后再试');
							}
						})
					}
					for(var i=0;i<inputs.length;i++){
						inputs[i].addEventListener('change',function(){
							listContainer.classList.add('hasChange');
							mui.fire(detailMain,'getParams',{
								hasChange:listContainer.classList.contains('hasChange')
							})
						})
					
					}
					clearBtn.addEventListener('tap',function(){
						if(this.classList.contains('clearAble')){
							for(var i=0;i<inputs.length;i++){
							inputs[i].value='';
							}
							for(var j=0;j<selectRights.length;j++){
								selectRights[j].innerHTML='请选择';
							}
							this.classList.remove('clearAble');
						}
						
					})
//					未保存的提示
					window.addEventListener('hasChange',function(){
						mui.confirm('当前存在未保存的数据，是否保存？',function(e){
							if(e.index==1){
								saveObservation();
								mui.fire(detailMain,'selectTrue',{
									isSave:true
								})
							}else {
								listContainer.classList.remove('hasChange');
								mui.fire(detailMain,'getParams',{
									hasChange:listContainer.classList.contains('hasChange')
								})
								mui.fire(detailMain,'selectTrue',{
									isSave:false
								})
							}
						})
					})

				}
				,error:function(){
					plus.nativeUI.closeWaiting();
					mui.toast('服务器异常，请稍后再试');
				}
			})
			
			
			
		}
				if(window.plus){
					plusReady();
				}else{
					document.addEventListener("plusready",plusReady,false);
				}
				

		</script>
		<script src="../js/updateTime.js"></script>
			
		<!--下拉选项-->
		<script>
//			获取下拉选项Dom
			var selectDom=document.getElementsByClassName('selectItem');
			var selectArea=document.getElementById('selectArea');
			
			var itemName=document.getElementById('itemName');
			var hooks=document.getElementsByClassName('hook');
			var nextPre=document.getElementById('nextPre');
//			遮罩层的操作
			var mask = mui.createMask(function(){
				selectArea.style.display='none';
				selectArea.classList.remove('hasShow');
				itemName.innerHTML='';
			});
			var inputs=document.getElementsByClassName('listcontainer')[0].getElementsByTagName('input');
			var inputNext='';
			var inputNextBtn=document.getElementById('inputNext');
			var inputClearBtn=document.getElementById('inputClear');
//			各个文本框的获取焦点事件
				for(var i=0;i<inputs.length;i++){
				
				inputs[i].setAttribute('index',i);	
				inputs[i].addEventListener('focus',(function(n){
					
					return function(){
						
						if(this.getAttribute('index')==6){
							inputNext=inputs[n];
							nextPre.style.display='none';
							return;
						}
						nextPre.style.display='flex';
						inputNext=inputs[n];
		
					}
				})(i));
				inputs[i].addEventListener('blur',function(){
					nextPre.style.display='none';
				})
			}
//			下一项和清除功能
			inputNextBtn.addEventListener('tap',function(){
				if(inputNext.getAttribute('index')=='2'){
					nextPre.style.display='none';
					selectInfo(selectDom[0]);
					return;
				}
				if(inputNext.getAttribute('index')=='3'){
					nextPre.style.display='none';
					selectInfo(selectDom[7]);
					return;
				}
				if(inputNext.getAttribute('index')=='5'){
					nextPre.style.display='none';
					
					selectInfo(selectDom[9]);
					return;
				}
				setTimeout(function(){
					
					inputs[parseInt(inputNext.getAttribute('index'))+1].focus();
				},5);
				
			})
			inputClearBtn.addEventListener('tap',function(){
				inputNext.value='';
				setTimeout(function(){
					inputNext.focus();					
				},10);
			})
			var next='';
//			点击选择项的操作
			function selectInfo(ele){
					selectArea.style.display='block';
					mask.show();
					itemName.innerHTML=ele.firstElementChild.innerHTML;
					mui.ajax({
						url:url,
						type:'get',
						data:{
							msgBody:JSON.stringify({
			                   			Observation:ele.firstElementChild.innerHTML
	                				}),                   
	                				msgHeader:JSON.stringify({
	                    				ServerName:'GetSelectValues',
	                    				Format: 'json',
	                    				CallOperator: '',
	                    				Certificate:'123456'
	                    			})
						},
						dataType:'json',
						success:function(data){
							if(data.Code==0){
								var items=data.Contents;
								var html=template('selectItemTpl',{list:items});
								document.getElementById('liCon').innerHTML=html;
							}else {
								data.Contents=[];
								data.Contents[0]='';
								var items=data.Contents;
								var html=template('selectItemTpl',{list:items});
								document.getElementById('liCon').innerHTML=html;
							}
							var lis=document.getElementsByClassName('itemCon')[0].getElementsByTagName('li');
							var selectInput=document.getElementById('selectInput');
							
							
							for(var i=0;i<lis.length;i++){
								if(lis[i].lastElementChild.innerHTML==ele.lastElementChild.innerHTML){
									lis[i].firstElementChild.style.display='block';
								}
								lis[i].addEventListener('tap',function(){
									listContainer.classList.add('hasChange');
									if(window.plus){
										plusReady();
									}else{
										document.addEventListener("plusready",plusReady,false);
									}
									function plusReady(){
										var detailMain=plus.webview.getWebviewById('detail_main.html');
										mui.fire(detailMain,'getParams',{
										hasChange:listContainer.classList.contains('hasChange')
										})
									}
									
									for(var j=0;j<hooks.length;j++){
										hooks[j].style.display='none';
									}
									selectInput.value=this.lastElementChild.innerHTML;
									this.firstElementChild.style.display='block';
									this.setAttribute('right','right');
									ele.lastElementChild.innerHTML=selectInput.value;
								})
								
							}
							selectInput.addEventListener('input',function(){
								ele.lastElementChild.innerHTML=this.value;
							})
						}
				})
					next=selectDom[parseInt(ele.getAttribute('index'))+1];
					
//									
			}
//			选项框中的清除打钩事件
			document.getElementById('clear').addEventListener('tap',function(){
						for(var j=0;j<hooks.length;j++){
							hooks[j].style.display='none';
						}
						selectInput.value='';
						selectDom[parseInt(next.getAttribute('index'))-1].lastElementChild.innerHTML='请选择';
					})
//			下一项事件
			document.getElementById('nextItem').addEventListener('tap',function(){	
						selectInput.value='';
						for(var j=0;j<hooks.length;j++){
							hooks[j].style.display='none';
						}						
						if(!next){
							selectArea.style.display='none';
							selectArea.classList.remove('hasShow');
							itemName.innerHTML='';
							mask.close();
							setTimeout(function(){
								inputs[6].focus();
							},10);
						}else if(parseInt(next.getAttribute('index'))==7){
							document.getElementById('FiO2').focus();
							selectArea.style.display='none';
							selectArea.classList.remove('hasShow');
							itemName.innerHTML='';
							mask.close();
							setTimeout(function(){
								inputs[3].focus();
							},10);
							
						}else if(parseInt(next.getAttribute('index'))==9){
							selectArea.style.display='none';
							selectArea.classList.remove('hasShow');
							itemName.innerHTML='';
							mask.close();
							setTimeout(function(){
								inputs[4].focus();
							},10);
						}else {
							selectInfo(next);
						}
						
					})
			var clearBtn=document.getElementById('clearButton');
			for(var i=0;i<selectDom.length;i++){
				selectDom[i].setAttribute('index',i);
				selectDom[i].addEventListener('tap',function(n){					
						selectInfo(this);
						
				});
			}
			
		</script>
	</body>

</html>